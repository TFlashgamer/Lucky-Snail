const readline = require("readline");

var ta;
var rl;

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–æ–≤
var green = "\x1b[32m";
var white = "\x1b[37m";
var red = "\x1b[31m";
var cyan = "\x1b[36m";
var yellow = "\x1b[33m";

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∏–≥—Ä—ã
var day = 7;
var night = -2;
var count = 0;
var gamecount = 0;
var depth;
var answer;
var wasanswer = false;
let way = 0;
var zombieChance = 0;
var alreadyZombie = false;
var dead = false;
var coin = 0;
var min = 1;
var max = 100;
let life = 72;

console.info(white, "üéÆ –ò–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞ '—É–ª–∏—Ç–∫–∞'");
console.info("\n\n‚ùî –û —á—ë–º –∏–≥—Ä–∞: \n");
console.info(
  "‚óºÔ∏è –ú–∞–ª–µ–Ω—å–∫–∞—è —É–ª–∏—Ç–∫–∞ —É–ø–∞–ª–∞ –Ω–∞ –¥–Ω–æ –∫–æ–ª–æ–¥—Ü–∞, –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å—Å—è –Ω–∞–≤–µ—Ä—Ö \n"
);
console.info(
  "‚óºÔ∏è –£–ª–∏—Ç–∫–∏ –¥–æ–ª–≥–æ –Ω–µ –∂–∏–≤—É—Ç, –≤—Å–µ–≥–æ —Ç–æ 72 –¥–Ω—è, —Ç–∞–∫ —á—Ç–æ –µ–π —Å—Ç–æ–∏—Ç –ø–æ—Ç–æ—Ä–æ–ø–∏—Ç—å—Å—è! \n"
);
console.info("\n\n‚ùî –ß—Ç–æ –¥–µ–ª–∞—Ç—å: \n");
console.info("‚óºÔ∏è –í—ã —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ –≥–ª—É–±–∏–Ω—É –∫–æ–ª–æ–¥—Ü–∞ \n");
console.info("‚óºÔ∏è –ê –¥–∞–ª—å—à–µ –ø—Ä–æ—Å—Ç–æ —Å–º–æ—Ç—Ä–∏—Ç–µ –∏ –º–æ–ª–∏—Ç–µ—Å—å –∑–∞ –∂–∏–∑–Ω—å —É–ª–∏—Ç–∫–∏ :) \n");
console.info(green, "\nüéÅ –ë–æ–Ω—É—Å—ã: \n");
console.info(
  "üöÄ –î–∂–µ—Ç–ø–∞–∫: –≤—ã—Ç–∞–ª–∫–∏–≤–∞–µ—Ç —É–ª–∏—Ç–∫—É –≤–≤–µ—Ä—Ö –Ω–∞ 25 –º [–®–∞–Ω—Å 30% –∫–∞–∂–¥—ã–π –¥–µ–Ω—å]\n"
);
console.info(
  "üßü‚Äç‚ôÇÔ∏è–ó–æ–º–±–∏: –î–∞—ë—Ç —É–ª–∏—Ç–∫–µ –µ—â—ë –æ–¥–Ω—É –∂–∏–∑–Ω—å (72 –¥–Ω—è) [–®–∞–Ω—Å 20% –≤ –∫–æ–Ω—Ü–µ –∂–∏–∑–Ω–∏ —É–ª–∏—Ç–∫–∏]\n"
);
console.info(
  "üç¨ –ö–æ–Ω—Ñ–µ—Ç–∞: –î–∞—ë—Ç —É–ª–∏—Ç–∫–µ –¥–æ 2 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∂–∏–∑–Ω–µ–π [–®–∞–Ω—Å 3% –∫–∞–∂–¥—ã–π –¥–µ–Ω—å]\n"
);
console.info(cyan, "\nüí† –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã: \n");
console.info(
  "üíä –í–æ–ª—à–µ–±–Ω–∞—è —Ç–∞–±–ª–µ—Ç–∫–∞: –° –Ω–µ–∫–æ—Ç–æ—Ä—ã–º —à–∞–Ω—Å–æ–º –º–æ–∂–µ—Ç –ª–∏–±–æ –¥–æ–±–∞–≤–∏—Ç—å –∂–∏–∑–Ω–∏ —É–ª–∏—Ç–∫–µ –ª–∏–±–æ —É–±–∞–≤–∏—Ç—å. [–®–∞–Ω—Å –Ω–∞–π—Ç–∏ —Ç–∞–±–ª–µ—Ç–∫—É 7%]\n"
);
console.info(
  "üßø –î—ã—Ä–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ: –¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç —É–ª–∏—Ç–∫—É –ª–∏–±–æ –Ω–∞–º–Ω–æ–≥–æ –≤—ã—à–µ –ø–æ –∫–æ–ª–æ–¥—Ü—É, –ª–∏–±–æ –Ω–∞–º–Ω–æ–≥–æ –Ω–∏–∂–µ [–®–∞–Ω—Å 5% –∫–∞–∂–¥—ã–π –¥–µ–Ω—å]\n"
);
console.info(
  "üêå –¢—è–≥–∞ –∫ —Å–≤–æ–±–æ–¥–µ: –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–æ–¥–∞–≤–ª–µ–Ω–∞ —É–ª–∏—Ç–∫–∞ –∏–ª–∏ —á—É–≤—Å—Ç–≤—É–µ—Ç —Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å, –º–µ–Ω—è–µ—Ç—Å—è —ë—ë –∫–æ–ª–∏—á–µ—Å–≤–æ –ø—Ä–æ–π–¥–µ–Ω–æ–≥–æ\n –ø—É—Ç–∏ –∑–∞ –¥–µ–Ω—å [–®–∞–Ω—Å 6% –∫–∞–∂–¥—ã–π –¥–µ–Ω—å]\n"
);
console.info(red, "\nü™® –ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –∏ –ª–æ–≤—É—à–∫–∏: \n");
console.info(
  "ü™® –ö–∞–º–µ–Ω—å: –ú–æ–∂–µ—Ç —É–ø–∞—Å—Ç—å –Ω–∞ —É–ª–∏—Ç–∫—É –∏ —Å–¥–≤–∏–Ω—É—Ç—å –µ—ë –ª–∏–±–æ –Ω–µ–º–Ω–æ–≥–æ –Ω–∏–∂–µ, –ª–∏–±–æ —Å–±—Ä–æ—Å–∏—Ç—å –Ω–∞ –¥–Ω–æ –∫–æ–ª–æ–¥—Ü–∞. [–®–∞–Ω—Å 10% –∫–∞–∂–¥—ã–π –¥–µ–Ω—å] [–®–∞–Ω—Å —É–ø–∞—Å—Ç—å –Ω–∞ –¥–Ω–æ 37%]\n"
);
console.info(
  "üï≥Ô∏è –Ø–º–∫–∞ –Ω–∞ —Å—Ç–µ–Ω–µ: –ú–æ–∂–µ—Ç –∑–∞–¥–µ—Ä–∂–∞—Ç—å —É–ª–∏—Ç–∫—É –Ω–∞ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ –º–µ—Å—Ç–µ –¥–æ 8 –¥–Ω–µ–π! [–®–∞–Ω—Å 6% –∫–∞–∂–¥—ã–π –¥–µ–Ω—å]\n"
);
console.info(
  "üíß –î–æ–∂–¥—å: –ò–∑-–∑–∞ –Ω–µ–≥–æ —É–ª–∏—Ç–∫–∞ –º–æ–∂–µ—Ç —Å–æ—Å–∫–æ–ª—å–∑–Ω—É—Ç—å –≤–Ω–∏–∑ [–®–∞–Ω—Å 4% –∫–∞–∂–¥—ã–π –¥–µ–Ω—å]\n",
  white
);

const timer = (ms) => new Promise((res) => setTimeout(res, ms));

// –ì–ª—É–±–∏–Ω–∞ –∫–æ–ª–æ–¥—Ü–∞
function Depth() {
  if (gamecount >= 1) {
    rl.close();
    ta.close();
  }
  rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
  });
  rl.question("üîΩ –í–≤–µ–¥–∏—Ç–µ –≥–ª—É–±–∏–Ω—É –∫–æ–ª–æ–¥—Ü–∞ (–º)\n", function (datastore) {
    depth = datastore;
    depth = parseInt(depth, 10);
    console.clear();
    console.log("üîΩ –ì–ª—É–±–∏–Ω–∞ –∫–æ–ª–æ–¥—Ü–∞: " + depth + " –º");
    CountWay();
    rl.close();
  });
}

Depth();

// –°—ã–≥—Ä–∞—Ç—å –µ—â—ë
function TryAgain() {
  if (wasanswer == true) {
    ta.close();
  }
  rl.close();
  ta = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
  });
  wasanswer = true;
  ta.question(
    "‚ôªÔ∏è –•–æ—Ç–∏—Ç–µ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â—ë —Ä–∞–∑?\n[1]/[–î–∞]/[Yes]/[y]\n[2]/[–ù–µ—Ç]/[No]/[n]\n",
    function (answerread) {
      answer = answerread;
      if (
        answer == 1 ||
        answer == "–î–∞" ||
        answer == "–¥–∞" ||
        answer == "y" ||
        answer == "Yes" ||
        answer == "yes"
      ) {
        depth = 0;
        life = 72;
        way = 0;
        day = 7;
        night = -2;
        count = 0;
        zombieChance = 0;
        alreadyZombie = false;
        dead = false;
        min = 1;
        max = 100;
        console.clear();
        Depth();
        return;
      } else if (
        answer == 2 ||
        answer == "–ù–µ—Ç" ||
        answer == "–Ω–µ—Ç" ||
        answer == "n" ||
        answer == "No" ||
        answer == "no"
      ) {
        console.log("üçÇ –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â—ë!");
        ta.close();
      } else {
        console.clear();
        TryAgain();
        console.log("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã \n");
        return;
      }
    }
  );
}

// –¢—è–≥–∞ –∫ —Å–≤–æ–±–æ–¥–µ
function Freedom(freedomChance, freedomDay, freedomNight) {
  if (freedomChance > 94) {
    day = freedomDay;
    night = freedomNight;
    console.log(
      `\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n`
    );
    if (freedomDay < 0) {
      console.log(
        red,
        `\n~~ üêå –£–ª–∏—Ç–∫–∞ –≤—ã–≥–ª—è–¥–∏—Ç –ø–æ–¥–∞–≤–ª–µ–Ω–æ–π. –¢–µ–ø–µ—Ä—å –æ–Ω–∞ –ø–æ–ª–∑—ë—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ${yellow}${freedomDay}${red} –º ~~`,
        white
      );
    } else if (freedomDay == 0) {
      console.log(
        cyan,
        `\n~~ üêå –£–ª–∏—Ç–∫–∞ –∑–∞–¥—É–º–∞–ª–∞—Å—å. –ï—ë –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–º—É –Ω–µ –ø–æ–º–µ–Ω—è–ª–æ—Å—å. ~~`,
        white
      );
    } else {
      console.log(
        green,
        `\n~~ üêå –£–ª–∏—Ç–∫–∞ —Ö–æ—á–µ—Ç –Ω–∞ —Å–≤–æ–±–æ–¥—É –µ—â—ë –±–æ–ª—å—à–µ. –¢–µ–ø–µ—Ä—å –æ–Ω–∞ –ø–æ–ª–∑—ë—Ç –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ${yellow}${freedomDay}${green} –º ~~`,
        white
      );
    }
    if (freedomNight == 0) {
      console.log(
        green,
        `~~ üêå –£–ª–∏—Ç–∫–∞ –∑–∞–¥—É–º–∞–ª–∞—Å—å –µ—â—ë —Ä–∞–∑. –û–Ω–∞ –≤—Å—ë –∂–µ —Ö–æ—á–µ—Ç –Ω–∞ —Å–≤–æ–±–æ–¥—É –∏ –Ω–µ –±—É–¥–µ—Ç –æ—Ç–¥—ã—Ö–∞—Ç—å –Ω–æ—á—å—é. ~~\n`,
        white
      );
    } else {
      console.log(
        red,
        `~~ üêå –£–ª–∏—Ç–∫–∞ –ø–æ–¥—É–º–∞–ª–∞, —á—Ç–æ –µ–π –µ—â—ë –¥–∞–ª–µ–∫–æ. –û–Ω–∞ —Å–ø–æ–ª–∑–∞–µ—Ç –∫–∞–∂–¥—É—é –Ω–æ—á—å —á—Ç–æ-–±—ã –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –Ω–∞ ${yellow}${freedomNight}${red} –º –≤–Ω–∏–∑ ~~\n`,
        white
      );
    }
    console.log(
      `\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n`
    );
  }
}

// –î–æ–∂–¥—å
function Rain(rainWay, rainWayChance) {
  if (rainWayChance > 96) {
    way = way - rainWay;
    console.log(
      `\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n`
    );
    console.log(red, "\n~~ üíß –ù–∞—á–∞–ª—Å—è –¥–æ–∂–¥—å ~~");
    if (rainWay == 0) {
      console.log(
        cyan,
        `~~ üíß –£–ª–∏—Ç–∫–∞ –ø—ã—Ç–∞–ª–∞—Å—å –¥–µ—Ä–∂–∞—Ç—å—Å—è –∏–∑–æ –≤—Å–µ—Ö —Å–∏–ª, –∏ —É –Ω–µ—ë —ç—Ç–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å! –û–Ω–∞ –Ω–µ —Å–ø–æ–ª–∑–ª–∞ –Ω–∏ –Ω–∞ –º–µ—Ç—Ä ~~\n`,
        white
      );
    } else {
      console.log(
        `~~ üíß –£–ª–∏—Ç–∫–∞ –ø–æ–ø–∞–ª–∞ –ø–æ–¥ –¥–æ–∂–¥—å –∏ —Å–ø–æ–ª–∑–ª–∞ –Ω–∞ ${yellow}${rainWay}${red} –º –≤–Ω–∏–∑ ~~\n`,
        white
      );
    }
    console.log(
      `\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n`
    );
  }
}

// –ö–æ–Ω—Ñ–µ—Ç–∞
function Candy(candyLife, candyLifeChance) {
  if (candyLifeChance > 97) {
    life = life + candyLife;
    if (candyLife == 0) {
      console.log(
        cyan,
        `\n~~ üç¨ –ö–æ–Ω—Ñ–µ—Ç–∞ –±—ã–ª–∞ –∫–æ–Ω–µ—á–Ω–æ –≤–∫—É—Å–Ω–æ–π, –Ω–æ –∫–∞–∂–µ—Ç—Å—è, –æ–Ω–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–∞–ª–∞... ~~\n`,
        white
      );
    } else {
      console.log(
        green,
        `\n~~ üç¨ –ü–æ–ø—Ä–æ–±–æ–≤–∞–≤ —ç—Ç—É –≤–∫—É—Å–Ω—É—é –∫–æ–Ω—Ñ–µ—Ç—É, —É–ª–∏—Ç–∫–µ –∑–∞—Ö–æ—Ç–µ–ª–æ—Å—å –∂–∏—Ç—å –Ω–∞ ${yellow}${candyLife}${green} –¥–µ–Ω—å(–¥–Ω—è) –±–æ–ª—å—à–µ ~~\n`,
        white
      );
    }
  }
}

// –Ø–º–∫–∞ –Ω–∞ —Å—Ç–µ–Ω–µ
function WallHole(wallHole, wallHoleChance) {
  if (wallHoleChance > 94) {
    count = count + wallHole;
    if (wallHole > 0) {
      console.log(
        red,
        `\n~~ üï≥Ô∏è‚è¨ –í—ã –ø–æ–ø–∞–ª–∏ –≤ —è–º–∫—É –Ω–∞ —Å—Ç–µ–Ω–µ –∫–æ–ª–æ–¥—Ü–∞ –∏ –∑–∞–¥–µ—Ä–∂–∞–ª–∏—Å—å —Ç–∞–º –Ω–∞${yellow}${wallHole}${red} –¥–Ω–µ–π ~~\n`,
        white
      );
    } else if (wallHole == 0) {
      console.log(
        cyan,
        `\n~~ üï≥Ô∏è –í—ã –ø–æ–ø–∞–ª–∏ –≤ —è–º–∫—É –Ω–∞ —Å—Ç–µ–Ω–µ –∫–æ–ª–æ–¥—Ü–∞, –Ω–æ —É–ª–∏—Ç–∫–∞ —Å—É–º–µ–ª–∞ —Å—Ä–∞–∑—É –≤—ã–±—Ä–∞—Ç—å—Å—è –æ—Ç —Ç—É–¥–∞ ~~\n`,
        white
      );
    }
  }
}

// –î—ã—Ä–∞ –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ
function TimeHole(timeHole, timeHoleChance) {
  if (timeHoleChance > 95) {
    console.log(
      `\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n`
    );
    console.log(cyan, `~~ üßø –û—É.. –£–ª–∏—Ç–∫—É –∑–∞—Å–æ—Å–∞–ª–æ –≤ –¥—ã—Ä—É –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ... ~~`);
    way = way + timeHole;
    if (way < 0) {
      way = 0;
    }
    if (timeHole < 0) {
      console.log(
        red,
        `~~ üßø‚è¨ –£–ª–∏—Ç–∫—É –≤—ã–±—Ä–æ—Å–∏–ª–æ –∏–∑ –¥—ã—Ä—ã –Ω–∞ ${yellow}${timeHole}${red} –º –≤–Ω–∏–∑, –∏ —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ –ø—Ä–æ–ø–æ–ª–∑–ª–∞ ${yellow}${way}${red} –º ~~`,
        white
      );
    } else if (timeHole == 0) {
      console.log(
        cyan,
        `~~ üßø –•–µ—Ö, —É–ª–∏—Ç–∫—É –≤—ã–±—Ä–æ—Å–∏–ª–æ –Ω–∞–∑–∞–¥ –∏–∑ —Ç–æ–π –∂–µ –¥—ã—Ä—ã –∏ –æ–Ω–∞ –æ—Å—Ç–∞–ª–∞—Å—å –Ω–∞ —Ç–æ–º –∂–µ –º–µ—Å—Ç–µ ~~`,
        white
      );
    } else {
      console.log(
        green,
        `~~ üßø‚è´ –û–≥–æ! –£–ª–∏—Ç–∫—É –≤—ã–±—Ä–æ—Å–∏–ª–æ –∏–∑ –¥—ã—Ä—ã –Ω–∞ ${yellow}${timeHole}${green} –º –≤–≤–µ—Ä—Ö! –¢–µ–ø–µ—Ä—å –æ–Ω–∞ –ø—Ä–æ–ø–æ–ª–∑–ª–∞ ${yellow}${way}${green} –º ~~`,
        white
      );
    }
    console.log(
      `\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n`
    );
  }
}

// –í–æ–ª—à–µ–±–Ω–∞—è —Ç–∞–±–ª–µ—Ç–∫–∞
function PillBuff(magicPill, magicPillChance) {
  if (magicPillChance > 93) {
    if (magicPill < 0) {
      console.log(
        red,
        `\n~~ üíä‚è¨–í—ã –Ω–∞—à–ª–∏ –ø–ª–æ—Ö—É—é –≤–æ–ª—à–µ–±–Ω—É—é —Ç–∞–±–ª–µ—Ç–æ—á–∫—É. –í—ã –±—É–¥–µ—Ç–µ –∂–∏—Ç—å –Ω–∞ ${yellow}${magicPill}${red} –¥–Ω—è –º–µ–Ω—å—à–µ ~~\n`,
        white
      );
    } else if (magicPill == 0) {
      console.log(
        cyan,
        `\n~~ üíä–í—ã –Ω–∞—à–ª–∏ —Ç–∞–±–ª–µ—Ç–∫—É –ø—É—Å—Ç—ã—à–∫—É. –ö–æ–º—É –≤–æ–æ–±—â–µ –ø—Ä–∏—à–ª–æ–≤ –≥–æ–ª–æ–≤—É –≤—ã–ø—É—Å–∫–∞—Ç—å —Ç–∞–∫–∏–µ —Ç–∞–±–ª–µ—Ç–∫–∏?  ~~\n`,
        white
      );
    } else {
      console.log(
        green,
        `\n~~ üíä‚è´–í—ã –Ω–∞—à–ª–∏ —Ö–æ—Ä–æ—à—É—é –≤–æ–ª—à–µ–±–Ω—É—é —Ç–∞–±–ª–µ—Ç–æ—á–∫—É. –í—ã –±—É–¥–µ—Ç–µ –∂–∏—Ç—å –µ—â—ë –Ω–∞ ${yellow}${magicPill}${green} –¥–Ω—è –±–æ–ª—å—à–µ ~~\n`,
        white
      );
    }
    life = life + magicPill;
  }
}

// –î–∂–µ—Ç–ø–∞–∫
function JetPack(chance, boost) {
  if (chance > 70) {
    way = way + boost;
    console.log(
      green,
      `~~ üöÄ –£–ª–∏—Ç–∫–∞ –Ω–∞—à–ª–∞ –¥–∂–µ—Ç–ø–∞–∫ –∏ —Ç–µ–ø–µ—Ä—å –æ–Ω–∞ –ø—Ä–æ–ø–æ–ª–∑–ª–∞ ${yellow}${way}${green} –º ~~\n`,
      white
    );
  }
}

// –ö–∞–º–µ–Ω—å
function Rock(rockChance, fallChance, depthFall) {
  if (rockChance > 90) {
    way = way - depthFall;
    console.log(
      `\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n`
    );
    console.log(red, "~~ ü™®–ù–∞ –í–∞—Å —É–ø–∞–ª –∫–∞–º–µ–Ω—å ~~");
    if (fallChance > 67) {
      console.log("~~ üêå–£–ª–∏—Ç–∫–∞ —Å–≤–∞–ª–∏–ª–∞—Å—å –≤ —Å–∞–º—ã–π –Ω–∏–∑ ~~", white);
      way = 0;
    } else {
      console.log(
        cyan,
        "~~ üß±–í—ã —Å—É–º–µ–ª–∏ –∑–∞—Ü–µ–ø–∏—Ç—å—Å—è –∑–∞ —Å—Ç–µ–Ω—É –∏ –Ω–µ —É–ø–∞—Å—Ç—å –≤ —Å–∞–º—ã–π –Ω–∏–∑  ~~",
        white
      );
    }
    console.log(
      `\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n`
    );
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–µ–Ω–∏–≤–æ–π —É–ª–∏—Ç–∫–∏
function LazySnail() {
  if (day < night * -1) {
    night = 0;
    day = 0;
  }
  if (day == 0) {
    if (day < night) {
      night = 0;
      console.log(red, `~~ üêå –£–ª–∏—Ç–∫–∞ –Ω–µ —Ö–æ—á–µ—Ç –Ω–∏–∫—É–¥–∞ –ø–æ–ª–∑—Ç–∏... ~~\n`, white);
    }
  }
  if (night == day) {
    console.log(red, `~~ üêå –£–ª–∏—Ç–∫–∞ –Ω–µ —Ö–æ—á–µ—Ç –Ω–∏–∫—É–¥–∞ –ø–æ–ª–∑—Ç–∏... ~~\n`, white);
  }
  if ((day == 0 && night == 0) || day == night * -1) {
    console.log(red, `~~ üêå –£–ª–∏—Ç–∫–∞ –Ω–µ —Ö–æ—á–µ—Ç –Ω–∏–∫—É–¥–∞ –ø–æ–ª–∑—Ç–∏... ~~\n`, white);
  }
}

// –û–±—Å—á—ë—Ç –º–æ–Ω–µ—Ç
function Coins() {
  if (dead == false) {
    coin = Math.floor(coin + way * 0.05 + count * 0.25 + 50);
  } else {
    coin = Math.floor(coin + way * 0.05 + count * 0.25);
  }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—á—ë—Ç–∞ –ø—É—Ç–∏ —É–ª–∏—Ç–∫–∏ –∏ –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async function CountWay() {
  while (way < depth) {
    await timer(1000);
    if (count < life) {
      count++;
    } else {
      dead = true;

      break;
    }

    //

    Freedom(
      Math.floor(Math.random() * (max - min) + min),
      Math.floor(Math.random() * (20 - 0) + 0),
      Math.floor(Math.random() * (0 - -10) + -10)
    );
    LazySnail();
    Rain(
      Math.floor(Math.random() * (197 - 0) + 0),
      Math.floor(Math.random() * (max - min) + min)
    );
    Candy(
      Math.floor(Math.random() * (2 - 0) + 0),
      Math.floor(Math.random() * (max - min) + min)
    );
    WallHole(
      Math.floor(Math.random() * (8 - 0) + 0),
      Math.floor(Math.random() * (max - min) + min)
    );
    TimeHole(
      Math.floor(Math.random() * (250 - -100) + -100),
      Math.floor(Math.random() * (max - min) + min)
    );
    JetPack(Math.floor(Math.random() * (max - min) + min), 25);
    PillBuff(
      Math.floor(Math.random() * (10 - -5) + -5),
      Math.floor(Math.random() * (max - min) + min)
    );
    Rock(
      Math.floor(Math.random() * (max - min) + min),
      Math.floor(Math.random() * (max - min) + min),
      Math.floor(Math.random() * (50 - 5) + 5)
    );
    await timer(1000);

    if (way < 0) {
      way = 0;
    }
    way = way + day;
    console.log("‚òÄÔ∏è¬†–î–µ–Ω—å " + count + ": " + way + " –º");
    if (way < depth) {
      way = way + night;
      console.log("üåô¬†–ù–æ—á—å " + count + ": " + way + " –º");
    } else {
      break;
    }
  }

  if (dead == true) {
    zombieChance = Math.floor(Math.random() * (min - max + 1) + min) * -1;
    if (alreadyZombie == true) {
      gamecount++;
      Coins();
      console.log("\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n");
      console.log(
        "‚ò†Ô∏èüßü‚Äç‚ôÇÔ∏è¬†–£–ª–∏—Ç–∫–∞-–∑–æ–º–±–∏ —É–º–µ—Ä–ª–∞ –Ω–∞ " + yellow + count + white + " –¥–Ω–µ"
      );
      console.log(`‚è´ –í—Å–µ–≥–æ —É–ª–∏—Ç–∫–∞ –ø—Ä–æ–ø–æ–ª–∑–ª–∞ ${yellow}${way}${white} –º`);
      console.log("\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n");
      console.log(
        "üéÆ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞\n‚ùå –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!" + ` –í—Å–µ–≥–æ –∏–≥—Ä: ${gamecount}`
      );
      console.log(`ü™ô –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${coin} –º–æ–Ω–µ—Ç`);
      TryAgain();
    } else {
      //  –ó–æ–º–±–∏
      if (zombieChance > 80) {
        console.log(
          green,
          "~~ üßü‚Äç‚ôÇÔ∏è –í–∞–º –ø–æ–≤–µ–∑–ª–æ, –∏ –ø–æ—Å–ª–µ —Å–º–µ—Ä—Ç–∏, –í—ã —Å—Ç–∞–ª–∏ –∑–æ–º–±–∏! ~~",
          white
        );
        life = 72 * 2;
        alreadyZombie = true;
        dead = false;
        CountWay();
      } else {
        Coins();
        gamecount++;
        console.log("\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n");
        console.log("‚ò†Ô∏è¬†–£–ª–∏—Ç–∫–∞ —É–º–µ—Ä–ª–∞ –Ω–∞ " + yellow + count + white + " –¥–Ω–µ");
        console.log(`‚è´ –í—Å–µ–≥–æ —É–ª–∏—Ç–∫–∞ –ø—Ä–æ–ø–æ–ª–∑–ª–∞ ${yellow}${way}${white} –º`);
        console.log("\nxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n");
        console.log(
          "üéÆ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞\n‚ùå –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!" + ` –í—Å–µ–≥–æ –∏–≥—Ä: ${gamecount}`
        );
        console.log(`ü™ô –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${coin} –º–æ–Ω–µ—Ç`);
        TryAgain();
      }
    }
  } else {
    Coins();
    gamecount++;
    console.log("\n========================================\n");
    console.log(
      "üõ£Ô∏è¬†–£–ª–∏—Ç–∫–∞ –≤—ã–ø–æ–ª–∑–ª–∞ –∏–∑ –∫–æ–ª–æ–¥—Ü–∞ –Ω–∞:" + yellow + count + white + " –¥–Ω–µ"
    );
    console.log("\n========================================\n");
    console.log(
      "üéÆ –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞\n‚úîÔ∏è –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!üéÜ" + ` –í—Å–µ–≥–æ –∏–≥—Ä: ${gamecount}`
    );
    console.log(`ü™ô –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ ${coin} –º–æ–Ω–µ—Ç`);
    TryAgain();
  }
}
